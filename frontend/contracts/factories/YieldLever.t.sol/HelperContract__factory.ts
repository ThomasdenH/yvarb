/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HelperContract,
  HelperContractInterface,
} from "../../YieldLever.t.sol/HelperContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "msg",
        type: "string",
      },
    ],
    name: "WARNING_Deprecated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "bound",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "buyUsdc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "give",
        type: "uint256",
      },
    ],
    name: "deal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "give",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "adjust",
        type: "bool",
      },
    ],
    name: "deal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "give",
        type: "uint256",
      },
    ],
    name: "deal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "what",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "deployCode",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "what",
        type: "string",
      },
    ],
    name: "deployCode",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yieldLeverAddress",
        type: "address",
      },
    ],
    name: "grantYieldLeverAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "hoax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "address",
        name: "origin",
        type: "address",
      },
    ],
    name: "hoax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "give",
        type: "uint256",
      },
    ],
    name: "hoax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "give",
        type: "uint256",
      },
    ],
    name: "hoax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "rewind",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "skip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "give",
        type: "uint256",
      },
    ],
    name: "startHoax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "give",
        type: "uint256",
      },
    ],
    name: "startHoax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "startHoax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "address",
        name: "origin",
        type: "address",
      },
    ],
    name: "startHoax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testBuyUsdc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "give",
        type: "uint256",
      },
    ],
    name: "tip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000805460ff191660011790553480156200001e57600080fd5b50604080516318caf8e360e31b815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4860048083019190915260248201929092526044810191909152635553444360e01b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620000a257600080fd5b505af1158015620000b7573d6000803e3d6000fd5b5050604080516318caf8e360e31b8152737a250d5630b4cf539739df2c5dacb4c659f2488d60048201526024810191909152601260448201527124aab734b9bbb0b82b192937baba32b9181960711b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200014757600080fd5b505af11580156200015c573d6000803e3d6000fd5b5050604080516318caf8e360e31b815273c88191f8cb8e6d4a668b047c1c8503432c3ca86760048201526024810191909152600860448201526721b0bab6323937b760c11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620001e257600080fd5b505af1158015620001f7573d6000803e3d6000fd5b50505050613292806200020b6000396000f3fe6080604052600436106101445760003560e01c8063742c0e72116100b6578063c88a5e6d1161006f578063c88a5e6d14610399578063d06d8229146103b9578063d4babbca146103d9578063d82555f1146103f9578063e9a79a7b14610419578063fa7626d41461043957600080fd5b8063742c0e72146102df57806397754ae9146102f45780639a8325a014610314578063af9bbe5f14610334578063b9c071b414610354578063ba414fa61461037457600080fd5b80632d6c17a3116101085780632d6c17a31461020f5780633a7684631461022f5780633bf82db1146102515780635a6c1eed146102715780636bce989b1461029f5780636f597075146102bf57600080fd5b8063108554f21461015057806321ce600614610172578063233240ee1461019257806329a9e300146101b257806329ce9dde146101d257600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b3660046129c5565b610453565b005b34801561017e57600080fd5b5061017061018d3660046129f1565b610524565b34801561019e57600080fd5b506101706101ad366004612a21565b610904565b3480156101be57600080fd5b506101706101cd366004612a45565b6109d8565b3480156101de57600080fd5b506101f26101ed366004612b40565b610a83565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561021b57600080fd5b5061017061022a366004612bb8565b610ba5565b34801561023b57600080fd5b506101f260008051602061321d83398151915281565b34801561025d57600080fd5b5061017061026c366004612bd1565b610be1565b34801561027d57600080fd5b5061029161028c366004612c12565b610cbb565b604051908152602001610206565b3480156102ab57600080fd5b506101706102ba366004612bd1565b610de6565b3480156102cb57600080fd5b506101706102da366004612a21565b610df8565b3480156102eb57600080fd5b50610170610e9b565b34801561030057600080fd5b5061017061030f366004612c4c565b610ecc565b34801561032057600080fd5b506101f261032f366004612c9f565b6110ec565b34801561034057600080fd5b5061017061034f366004612bd1565b6111e6565b34801561036057600080fd5b5061017061036f366004612bb8565b61128d565b34801561038057600080fd5b506103896112ab565b6040519015158152602001610206565b3480156103a557600080fd5b506101706103b43660046129c5565b6113ce565b3480156103c557600080fd5b506101706103d4366004612a45565b611401565b3480156103e557600080fd5b506101706103f4366004612a21565b6114ac565b34801561040557600080fd5b50610170610414366004612bd1565b6115a6565b34801561042557600080fd5b506101706104343660046129c5565b611651565b34801561044557600080fd5b506000546103899060ff1681565b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d906104869085908590600401612cdc565b600060405180830381600087803b1580156104a057600080fd5b505af11580156104b4573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038516600482015260008051602061321d83398151915292506306447d5691506024015b600060405180830381600087803b15801561050857600080fd5b505af115801561051c573d6000803e3d6000fd5b505050505050565b6040516370a0823160e01b81526001600160a01b038216600482015260009073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48906370a0823190602401602060405180830381865afa15801561057f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a39190612cf5565b6040805160028082526060820183529293506000929091602083019080368337019050509050737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190612d0e565b8160008151811061065257610652612d2b565b60200260200101906001600160a01b031690816001600160a01b03168152505073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb488160018151811061069a5761069a612d2b565b6001600160a01b03909216602092830291909101909101526040516307c0329d60e21b8152600090737a250d5630b4cf539739df2c5dacb4c659f2488d90631f00ca74906106ee9088908690600401612d85565b600060405180830381865afa15801561070b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107339190810190612dc2565b60008151811061074557610745612d2b565b602002602001015160026107599190612e69565b905061076530826113ce565b6107906040518060400160405280600a8152602001696265666f72652062757960b01b8152506116f0565b60405163fb3bdb4160e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d9063fb3bdb419083906107cf90899087908a904290600401612e88565b60006040518083038185885af11580156107ed573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526108169190810190612dc2565b506040516370a0823160e01b81526001600160a01b038516600482015260009073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48906370a0823190602401602060405180830381865afa158015610872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108969190612cf5565b90506108a28487612ebd565b811461051c5760405162461bcd60e51b815260206004820152602660248201527f5553444320627579206661696c65643a20496e636f727265637420656e642062604482015265616c616e636560d01b60648201526084015b60405180910390fd5b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d9061093b908490600160801b90600401612cdc565b600060405180830381600087803b15801561095557600080fd5b505af1158015610969573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602061321d833981519152925063ca669fa791506024015b600060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d90610a0f908590600160801b90600401612cdc565b600060405180830381600087803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380861660048301528416602482015260008051602061321d83398151915292506347e50cce91506044016104ee565b604051638d1cc92560e01b8152600090819060008051602061321d83398151915290638d1cc92590610ab9908790600401612f05565b6000604051808303816000875af1158015610ad8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b009190810190612f38565b83604051602001610b12929190612faf565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610b9e5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084016108fb565b5092915050565b60008051602061321d83398151915263e5d6bf02610bc38342612fde565b6040518263ffffffff1660e01b81526004016109a391815260200190565b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d90610c149086908590600401612cdc565b600060405180830381600087803b158015610c2e57600080fd5b505af1158015610c42573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380871660048301528516602482015260008051602061321d83398151915292506345b5607891506044015b600060405180830381600087803b158015610c9e57600080fd5b505af1158015610cb2573d6000803e3d6000fd5b50505050505050565b600081831115610d335760405162461bcd60e51b815260206004820152603a60248201527f5465737420626f756e642875696e743235362c75696e743235362c75696e743260448201527f3536293a204d6178206973206c657373207468616e206d696e2e00000000000060648201526084016108fb565b6000610d3f8484612fde565b905080600003610d5157839150610d89565b6000198103610d6257849150610d89565b610d6b81612ff5565b90506000610d79828761300e565b9050610d858186612ebd565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b610df38383836000610ecc565b505050565b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d90610e2f908490600160801b90600401612cdc565b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038416600482015260008051602061321d83398151915292506306447d5691506024016109a3565b6040516310e7300360e11b81526305f5e10060048201819052306024830181905290916321ce6006906044016109a3565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691610f2091613030565b6000604051808303816000865af19150503d8060008114610f5d576040519150601f19603f3d011682016040523d82523d6000602084013e610f62565b606091505b50915050600081806020019051810190610f7c9190612cf5565b9050610fe884610fe287610fb96370a0823160e01b610f9c60018d611736565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9061175b565b821561051c5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916110309190613030565b6000604051808303816000865af19150503d806000811461106d576040519150601f19603f3d011682016040523d82523d6000602084013e611072565b606091505b5091505060008180602001905181019061108c9190612cf5565b9050828610156110b1576110a08684612fde565b6110aa9082612fde565b90506110c8565b6110bb8387612fde565b6110c59082612ebd565b90505b6110e281610fe26318160ddd60e01b610f9c60018d611736565b5050505050505050565b604051638d1cc92560e01b8152600090819060008051602061321d83398151915290638d1cc92590611122908690600401612f05565b6000604051808303816000875af1158015611141573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111699190810190612f38565b90508051602082016000f091506001600160a01b0382166111e05760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b60648201526084016108fb565b50919050565b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d906112199086908590600401612cdc565b600060405180830381600087803b15801561123357600080fd5b505af1158015611247573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380871660048301528516602482015260008051602061321d83398151915292506347e50cce9150604401610c84565b60008051602061321d83398151915263e5d6bf02610bc38342612ebd565b60008054610100900460ff16156112cb5750600054610100900460ff1690565b600060008051602061321d8339815191523b156113c95760405160009060008051602061321d833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4906113339083906519985a5b195960d21b90602001612cdc565b60408051601f1981840301815290829052611351929160200161304c565b60408051601f198184030181529082905261136b91613030565b6000604051808303816000865af19150503d80600081146113a8576040519150601f19603f3d011682016040523d82523d6000602084013e6113ad565b606091505b50915050808060200190518101906113c5919061307d565b9150505b919050565b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d906104ee9085908590600401612cdc565b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d90611438908590600160801b90600401612cdc565b600060405180830381600087803b15801561145257600080fd5b505af1158015611466573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380861660048301528416602482015260008051602061321d83398151915292506345b5607891506044016104ee565b6040805160048152602481019091526020810180516001600160e01b031663798a828b60e01b1790526000906114e19061309a565b60405163ca669fa760e01b8152733b870db67a45611cf4723d44487eaf398fac51e3600482015290915060008051602061321d8339815191529063ca669fa790602401600060405180830381600087803b15801561153e57600080fd5b505af1158015611552573d6000803e3d6000fd5b505060405163de02cde760e01b81526001600160e01b0319841660048201526001600160a01b038516602482015273c88191f8cb8e6d4a668b047c1c8503432c3ca867925063de02cde791506044016104ee565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a60405161162b906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a1610df381610fe284610fb96370a0823160e01b610f9c60018a611736565b60405163c88a5e6d60e01b815260008051602061321d8339815191529063c88a5e6d906116849085908590600401612cdc565b600060405180830381600087803b15801561169e57600080fd5b505af11580156116b2573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602061321d833981519152925063ca669fa791506024016104ee565b611733816040516024016117049190612f05565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611769565b50565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b611765828261178a565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156117fb57602002820191906000526020600020905b8154815260200190600101908083116117e7575b5050505050905060008361180e83611b61565b60405160200161181f92919061304c565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916118719186918891016130d1565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166118a9576118a787611c01565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916118e89187918991016130d1565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405161192d9190613030565b600060405180830381855afa9150503d8060008114611968576040519150601f19603f3d011682016040523d82523d6000602084013e61196d565b606091505b509150611986905081611981886020612e69565b612901565b604051630667f9d760e41b81529092506000915060008051602061321d8339815191529063667f9d70906119c0908b908790600401612cdc565b6020604051808303816000875af11580156119df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a039190612cf5565b9050808214611ab75760405162461bcd60e51b815260206004820152606e60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201526d39b73a1039bab83837b93a32b21760911b60a482015260c4016108fb565b6040516370ca10bb60e01b815260008051602061321d833981519152906370ca10bb90611aec908b9087908e9060040161310b565b600060405180830381600087803b158015611b0657600080fd5b505af1158015611b1a573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055611b4d60028b01600061297e565b896004016000905550505050505050505050565b6060600082516020611b739190612e69565b67ffffffffffffffff811115611b8b57611b8b612a73565b6040519080825280601f01601f191660200182016040528015611bb5576020820181803683370190505b50905060005b8351811015610b9e576000848281518110611bd857611bd8612d2b565b602002602001015190508082602002602001840152508080611bf990612ff5565b915050611bbb565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015611c7157602002820191906000526020600020905b815481526020019060010190808311611c5d575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350611cbb925085918791016130d1565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615611d57576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291611d279185918791016130d1565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083611d6383611b61565b604051602001611d7492919061304c565b604051602081830303815290604052905060008051602061323d83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611dd157600080fd5b505af1158015611de5573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051611e049190613030565b600060405180830381855afa9150503d8060008114611e3f576040519150601f19603f3d011682016040523d82523d6000602084013e611e44565b606091505b509150611e58905081611981876020612e69565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602061321d833981519152906365bc9481906024016000604051808303816000875af1158015611eb3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611edb9190810190613192565b509050805160010361221457600060008051602061323d83398151915260001c6001600160a01b031663667f9d708984600081518110611f1d57611f1d612d2b565b60200260200101516040518363ffffffff1660e01b8152600401611f42929190612cdc565b6020604051808303816000875af1158015611f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f859190612cf5565b905080611fe3577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110611fc157611fc1612d2b565b602002602001015160001c604051611fda929190612cdc565b60405180910390a15b8083146120945760405162461bcd60e51b815260206004820152606d60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201526c1cdb9d081cdd5c1c1bdc9d1959609a1b60a482015260c4016108fb565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016120ca9291906130d1565b60405160208183030381529060405280519060200120856000815181106120f3576120f3612d2b565b602002602001015160001c60405161210e94939291906131ec565b60405180910390a18160008151811061212957612129612d2b565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612172918a918c91016130d1565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916121da918a918c91016130d1565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555061278c565b60018151111561271c5760005b815181101561271657600060008051602061323d83398151915260001c6001600160a01b031663667f9d708a85858151811061225f5761225f612d2b565b60200260200101516040518363ffffffff1660e01b8152600401612284929190612cdc565b6020604051808303816000875af11580156122a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122c79190612cf5565b905080612324577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811061230257612302612d2b565b602002602001015160001c60405161231b929190612cdc565b60405180910390a15b60008051602061323d83398151915260001c6001600160a01b03166370ca10bb8a85858151811061235757612357612d2b565b602002602001015161133760f01b6040518463ffffffff1660e01b81526004016123839392919061310b565b600060405180830381600087803b15801561239d57600080fd5b505af11580156123b1573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516123d19190613030565b600060405180830381855afa9150503d806000811461240c576040519150601f19603f3d011682016040523d82523d6000602084013e612411565b606091505b509092509050612426816119818b6020612e69565b9550818015612439575061133760f01b86145b15612674577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016124749291906130d1565b6040516020818303038152906040528051906020012088888151811061249c5761249c612d2b565b602002602001015160001c6040516124b794939291906131ec565b60405180910390a18484815181106124d1576124d1612d2b565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909261251a918d918f91016130d1565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016125a59291906130d1565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602061323d83398151915260001c6001600160a01b03166370ca10bb8c87878151811061261357612613612d2b565b6020026020010151866040518463ffffffff1660e01b815260040161263a9392919061310b565b600060405180830381600087803b15801561265457600080fd5b505af1158015612668573d6000803e3d6000fd5b50505050505050612716565b60008051602061323d83398151915260001c6001600160a01b03166370ca10bb8c8787815181106126a7576126a7612d2b565b6020026020010151866040518463ffffffff1660e01b81526004016126ce9392919061310b565b600060405180830381600087803b1580156126e857600080fd5b505af11580156126fc573d6000803e3d6000fd5b50505050505050808061270e90612ff5565b915050612221565b5061278c565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016108fb565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916127ce9188918a91016130d1565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1661285b5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016108fb565b6005890180546001600160a01b031916905560038901805463ffffffff1916905561288a60028a01600061297e565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916128ce9188918a91016130d1565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111612916578451612919565b60205b905060005b8181101561297457612931816008612e69565b8661293c8388612ebd565b8151811061294c5761294c612d2b565b01602001516001600160f81b031916901c92909217918061296c81612ff5565b91505061291e565b5090949350505050565b508054600082559060005260206000209081019061173391905b808211156129ac5760008155600101612998565b5090565b6001600160a01b038116811461173357600080fd5b600080604083850312156129d857600080fd5b82356129e3816129b0565b946020939093013593505050565b60008060408385031215612a0457600080fd5b823591506020830135612a16816129b0565b809150509250929050565b600060208284031215612a3357600080fd5b8135612a3e816129b0565b9392505050565b60008060408385031215612a5857600080fd5b8235612a63816129b0565b91506020830135612a16816129b0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612ab257612ab2612a73565b604052919050565b600067ffffffffffffffff821115612ad457612ad4612a73565b50601f01601f191660200190565b6000612af5612af084612aba565b612a89565b9050828152838383011115612b0957600080fd5b828260208301376000602084830101529392505050565b600082601f830112612b3157600080fd5b612a3e83833560208501612ae2565b60008060408385031215612b5357600080fd5b823567ffffffffffffffff80821115612b6b57600080fd5b612b7786838701612b20565b93506020850135915080821115612b8d57600080fd5b508301601f81018513612b9f57600080fd5b612bae85823560208401612ae2565b9150509250929050565b600060208284031215612bca57600080fd5b5035919050565b600080600060608486031215612be657600080fd5b8335612bf1816129b0565b92506020840135612c01816129b0565b929592945050506040919091013590565b600080600060608486031215612c2757600080fd5b505081359360208301359350604090920135919050565b801515811461173357600080fd5b60008060008060808587031215612c6257600080fd5b8435612c6d816129b0565b93506020850135612c7d816129b0565b9250604085013591506060850135612c9481612c3e565b939692955090935050565b600060208284031215612cb157600080fd5b813567ffffffffffffffff811115612cc857600080fd5b612cd484828501612b20565b949350505050565b6001600160a01b03929092168252602082015260400190565b600060208284031215612d0757600080fd5b5051919050565b600060208284031215612d2057600080fd5b8151612a3e816129b0565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015612d7a5781516001600160a01b031687529582019590820190600101612d55565b509495945050505050565b828152604060208201526000612cd46040830184612d41565b600067ffffffffffffffff821115612db857612db8612a73565b5060051b60200190565b60006020808385031215612dd557600080fd5b825167ffffffffffffffff811115612dec57600080fd5b8301601f81018513612dfd57600080fd5b8051612e0b612af082612d9e565b81815260059190911b82018301908381019087831115612e2a57600080fd5b928401925b82841015612e4857835182529284019290840190612e2f565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612e8357612e83612e53565b500290565b848152608060208201526000612ea16080830186612d41565b6001600160a01b03949094166040830152506060015292915050565b60008219821115612ed057612ed0612e53565b500190565b60005b83811015612ef0578181015183820152602001612ed8565b83811115612eff576000848401525b50505050565b6020815260008251806020840152612f24816040850160208701612ed5565b601f01601f19169190910160400192915050565b600060208284031215612f4a57600080fd5b815167ffffffffffffffff811115612f6157600080fd5b8201601f81018413612f7257600080fd5b8051612f80612af082612aba565b818152856020838501011115612f9557600080fd5b612fa6826020830160208601612ed5565b95945050505050565b60008351612fc1818460208801612ed5565b835190830190612fd5818360208801612ed5565b01949350505050565b600082821015612ff057612ff0612e53565b500390565b60006001820161300757613007612e53565b5060010190565b60008261302b57634e487b7160e01b600052601260045260246000fd5b500690565b60008251613042818460208701612ed5565b9190910192915050565b6001600160e01b031983168152815160009061306f816004850160208701612ed5565b919091016004019392505050565b60006020828403121561308f57600080fd5b8151612a3e81612c3e565b805160208201516001600160e01b031980821692919060048310156130c95780818460040360031b1b83161693505b505050919050565b825160009082906020808701845b838110156130fb578151855293820193908201906001016130df565b5050948252509092019392505050565b6001600160a01b039390931683526020830191909152604082015260600190565b600082601f83011261313d57600080fd5b8151602061314d612af083612d9e565b82815260059290921b8401810191818101908684111561316c57600080fd5b8286015b848110156131875780518352918301918301613170565b509695505050505050565b600080604083850312156131a557600080fd5b825167ffffffffffffffff808211156131bd57600080fd5b6131c98683870161312c565b935060208501519150808211156131df57600080fd5b50612bae8582860161312c565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212205ba9c0bfc80cbc0c3883abd150a263adf4523954603deb6fd4c86eacd8b2a9de64736f6c634300080e0033";

type HelperContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelperContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelperContract__factory extends ContractFactory {
  constructor(...args: HelperContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HelperContract> {
    return super.deploy(overrides || {}) as Promise<HelperContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HelperContract {
    return super.attach(address) as HelperContract;
  }
  override connect(signer: Signer): HelperContract__factory {
    return super.connect(signer) as HelperContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelperContractInterface {
    return new utils.Interface(_abi) as HelperContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelperContract {
    return new Contract(address, _abi, signerOrProvider) as HelperContract;
  }
}
