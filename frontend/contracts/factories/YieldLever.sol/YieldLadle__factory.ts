/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  YieldLadle,
  YieldLadleInterface,
} from "../../YieldLever.sol/YieldLadle";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "seriesId",
        type: "bytes6",
      },
      {
        internalType: "bytes6",
        name: "ilkId",
        type: "bytes6",
      },
      {
        internalType: "uint8",
        name: "salt",
        type: "uint8",
      },
    ],
    name: "build",
    outputs: [
      {
        internalType: "bytes12",
        name: "",
        type: "bytes12",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes6",
            name: "seriesId",
            type: "bytes6",
          },
          {
            internalType: "bytes6",
            name: "ilkId",
            type: "bytes6",
          },
        ],
        internalType: "struct Vault",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId_",
        type: "bytes12",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "int128",
        name: "ink",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "art",
        type: "int128",
      },
    ],
    name: "close",
    outputs: [
      {
        internalType: "uint128",
        name: "base",
        type: "uint128",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId_",
        type: "bytes12",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "give",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes6",
            name: "seriesId",
            type: "bytes6",
          },
          {
            internalType: "bytes6",
            name: "ilkId",
            type: "bytes6",
          },
        ],
        internalType: "struct Vault",
        name: "vault",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "ilkId",
        type: "bytes6",
      },
    ],
    name: "joins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "seriesId",
        type: "bytes6",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId_",
        type: "bytes12",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "int128",
        name: "ink",
        type: "int128",
      },
      {
        internalType: "uint128",
        name: "min",
        type: "uint128",
      },
    ],
    name: "repay",
    outputs: [
      {
        internalType: "uint128",
        name: "art",
        type: "uint128",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId_",
        type: "bytes12",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "int128",
        name: "ink",
        type: "int128",
      },
      {
        internalType: "uint128",
        name: "max",
        type: "uint128",
      },
    ],
    name: "repayVault",
    outputs: [
      {
        internalType: "uint128",
        name: "base",
        type: "uint128",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId_",
        type: "bytes12",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "ink",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "base",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "max",
        type: "uint128",
      },
    ],
    name: "serve",
    outputs: [
      {
        internalType: "uint128",
        name: "art",
        type: "uint128",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class YieldLadle__factory {
  static readonly abi = _abi;
  static createInterface(): YieldLadleInterface {
    return new utils.Interface(_abi) as YieldLadleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldLadle {
    return new Contract(address, _abi, signerOrProvider) as YieldLadle;
  }
}
