/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  YieldLever,
  YieldLeverInterface,
} from "../../YieldLeverRinkeby.sol/YieldLever";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "ilkId_",
        type: "bytes6",
      },
      {
        internalType: "contract YVault",
        name: "yvUSDC_",
        type: "address",
      },
      {
        internalType: "contract RinkebyToken",
        name: "usdc_",
        type: "address",
      },
      {
        internalType: "address",
        name: "usdcJoin_",
        type: "address",
      },
      {
        internalType: "contract YieldLadle",
        name: "ladle_",
        type: "address",
      },
      {
        internalType: "address",
        name: "yvUSDCJoin_",
        type: "address",
      },
      {
        internalType: "contract Cauldron",
        name: "cauldron_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        internalType: "uint128",
        name: "base",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "ink",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "art",
        type: "uint128",
      },
    ],
    name: "doClose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "investAmount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "borrowAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxFyAmount",
        type: "uint128",
      },
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
    ],
    name: "doInvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "ink",
        type: "uint128",
      },
    ],
    name: "doRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "borrowAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxFyAmount",
        type: "uint128",
      },
      {
        internalType: "bytes6",
        name: "seriesId",
        type: "bytes6",
      },
    ],
    name: "invest",
    outputs: [
      {
        internalType: "bytes12",
        name: "",
        type: "bytes12",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "ink",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "art",
        type: "uint128",
      },
      {
        internalType: "bytes6",
        name: "seriesId",
        type: "bytes6",
      },
    ],
    name: "unwind",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014d4380380620014d48339810160408190526200003491620001d0565b6000805460d089901c6001600160d01b03199091161766010000000000006001600160a01b038981169190910291909117909155600180546001600160a01b03199081168884169081178355600280548316898616179055600380548316888616179055600480548316878616178155600580549093169486169490941790915560405163095ea7b360e01b81529283019190915260001960248301529063095ea7b3906044016020604051808303816000875af1158015620000fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000121919062000287565b5060015460005460405163095ea7b360e01b81526001600160a01b03660100000000000090920482166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562000183573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a9919062000287565b5050505050505050620002b2565b6001600160a01b0381168114620001cd57600080fd5b50565b600080600080600080600060e0888a031215620001ec57600080fd5b87516001600160d01b0319811681146200020557600080fd5b60208901519097506200021881620001b7565b60408901519096506200022b81620001b7565b60608901519095506200023e81620001b7565b60808901519094506200025181620001b7565b60a08901519093506200026481620001b7565b60c08901519092506200027781620001b7565b8091505092959891949750929550565b6000602082840312156200029a57600080fd5b81518015158114620002ab57600080fd5b9392505050565b61121280620002c26000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806347b348451461005c57806350bf94d7146100715780636e6bf1f414610084578063d238b43314610097578063fcd064cf146100aa575b600080fd5b61006f61006a366004610d82565b6100da565b005b61006f61007f366004610dea565b610207565b61006f610092366004610e32565b610493565b61006f6100a5366004610eb9565b610719565b6100bd6100b8366004610f32565b610aa4565b6040516001600160a01b0319909116815260200160405180910390f35b6000805460048054604051636e553f6560e01b81529182018890526001600160a01b039081166024830152660100000000000090920490911690636e553f65906044016020604051808303816000875af115801561013c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101609190610f7a565b6003546040516315bf1a8f60e31b81526001600160a01b031985166004820152600160248201526001600160801b0380841660448301528088166064830152861660848201529192506001600160a01b03169063adf8d4789060a4016020604051808303816000875af11580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff9190610f93565b505050505050565b6003546001600160a01b03166324bd54b4843061022385610fcd565b6040516001600160e01b031960e086901b1681526001600160a01b031990931660048401526001600160a01b039091166024830152600f0b60448201526001600160801b03851660648201526084016020604051808303816000875af1158015610291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b59190610f93565b50600060069054906101000a90046001600160a01b03166001600160a01b0316633ccfd60b6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561030b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032f9190610f7a565b506001805460405163a9059cbb60e01b81526004810192909252602482018490526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190610ffc565b506001546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90869083906370a0823190602401602060405180830381865afa1580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d9190610f7a565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048c9190610ffc565b5050505050565b6003546001600160a01b031663441c70f785306104af86610fcd565b6104b886610fcd565b6040516001600160e01b031960e087901b1681526001600160a01b031990941660048501526001600160a01b039092166024840152600f90810b60448401520b60648201526084016020604051808303816000875af115801561051f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105439190610f93565b50600060069054906101000a90046001600160a01b03166001600160a01b0316633ccfd60b6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190610f7a565b506001805460405163a9059cbb60e01b81526001600160a01b039091169163a9059cbb916105f09190879060040161101e565b6020604051808303816000875af115801561060f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106339190610ffc565b506001546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90879083906370a0823190602401602060405180830381865afa158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa9190610f7a565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff9190610ffc565b600554604051631e81f82960e01b81526001600160a01b0319881660048201526000916001600160a01b031690631e81f82990602401606060405180830381865afa15801561076c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079091906110c6565b6005546040516315740f8d60e21b81526001600160d01b0319851660048201529192506000916001600160a01b03909116906355d03e3490602401606060405180830381865afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c91906110e2565b82519091506001600160a01b0316331461082557600080fd5b60055460405163798a828b60e01b81526001600160a01b039091169063798a828b90610857908b90309060040161116b565b6060604051808303816000875af1158015610876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089a91906110c6565b50806040015163ffffffff164263ffffffff161015610928576001546040516340c10f1960e01b8152306004820152602481018990526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b5050505061092333898988610207565b610a24565b60055460405163550b025360e01b81526001600160d01b0319851660048201526001600160801b03861660248201526000916001600160a01b03169063550b0253906044016020604051808303816000875af115801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190610f93565b6001546040516340c10f1960e01b81529192506001600160a01b0316906340c10f19906109e3903090859060040161101e565b600060405180830381600087803b1580156109fd57600080fd5b505af1158015610a11573d6000803e3d6000fd5b50505050610a22338a838989610493565b505b60055460405163798a828b60e01b81526001600160a01b039091169063798a828b90610a56908b90339060040161116b565b6060604051808303816000875af1158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906110c6565b505050505050505050565b6005546040516315740f8d60e21b81526001600160d01b03198316600482015260009161181960f11b916001600160a01b03909116906355d03e3490602401606060405180830381865afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2491906110e2565b602001516001600160d01b03191614610b3c57600080fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb79190610ffc565b5060035460008054604051636d4756d760e01b81526001600160d01b0319868116600483015260d09290921b90911660248201526044810182905290916001600160a01b031690636d4756d7906064016080604051808303816000875af1158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a919061118e565b5090506000610c626001600160801b038716886111c4565b6001546040516340c10f1960e01b81529192506001600160a01b0316906340c10f1990610c959030908a9060040161101e565b600060405180830381600087803b158015610caf57600080fd5b505af1158015610cc3573d6000803e3d6000fd5b50505050610cd3818787856100da565b60055460405163798a828b60e01b81526001600160a01b039091169063798a828b90610d05908590339060040161116b565b6060604051808303816000875af1158015610d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4891906110c6565b50909695505050505050565b6001600160801b0381168114610d6957600080fd5b50565b6001600160a01b031981168114610d6957600080fd5b60008060008060808587031215610d9857600080fd5b843593506020850135610daa81610d54565b92506040850135610dba81610d54565b91506060850135610dca81610d6c565b939692955090935050565b6001600160a01b0381168114610d6957600080fd5b60008060008060808587031215610e0057600080fd5b8435610e0b81610dd5565b93506020850135610e1b81610d6c565b9250604085013591506060850135610dca81610d54565b600080600080600060a08688031215610e4a57600080fd5b8535610e5581610dd5565b94506020860135610e6581610d6c565b93506040860135610e7581610d54565b92506060860135610e8581610d54565b91506080860135610e9581610d54565b809150509295509295909350565b6001600160d01b031981168114610d6957600080fd5b60008060008060008060c08789031215610ed257600080fd5b8635610edd81610d6c565b9550602087013594506040870135610ef481610dd5565b93506060870135610f0481610d54565b92506080870135610f1481610d54565b915060a0870135610f2481610ea3565b809150509295509295509295565b60008060008060808587031215610f4857600080fd5b843593506020850135610f5a81610d54565b92506040850135610f6a81610d54565b91506060850135610dca81610ea3565b600060208284031215610f8c57600080fd5b5051919050565b600060208284031215610fa557600080fd5b8151610fb081610d54565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600081600f0b6f7fffffffffffffffffffffffffffffff198103610ff357610ff3610fb7565b60000392915050565b60006020828403121561100e57600080fd5b81518015158114610fb057600080fd5b6001600160a01b039290921682526001600160801b0316602082015260400190565b60006060828403121561105257600080fd5b6040516060810181811067ffffffffffffffff8211171561108357634e487b7160e01b600052604160045260246000fd5b8060405250809150825161109681610dd5565b815260208301516110a681610ea3565b602082015260408301516110b981610ea3565b6040919091015292915050565b6000606082840312156110d857600080fd5b610fb08383611040565b6000606082840312156110f457600080fd5b6040516060810181811067ffffffffffffffff8211171561112557634e487b7160e01b600052604160045260246000fd5b604052825161113381610dd5565b8152602083015161114381610ea3565b6020820152604083015163ffffffff8116811461115f57600080fd5b60408201529392505050565b6001600160a01b03199290921682526001600160a01b0316602082015260400190565b600080608083850312156111a157600080fd5b82516111ac81610d6c565b91506111bb8460208501611040565b90509250929050565b600082198211156111d7576111d7610fb7565b50019056fea264697066735822122057dc11910de546fa3acceabea7b42473d80b4182eb7204b3ab688775f46d857464736f6c634300080e0033";

type YieldLeverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldLeverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldLever__factory extends ContractFactory {
  constructor(...args: YieldLeverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ilkId_: PromiseOrValue<BytesLike>,
    yvUSDC_: PromiseOrValue<string>,
    usdc_: PromiseOrValue<string>,
    usdcJoin_: PromiseOrValue<string>,
    ladle_: PromiseOrValue<string>,
    yvUSDCJoin_: PromiseOrValue<string>,
    cauldron_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldLever> {
    return super.deploy(
      ilkId_,
      yvUSDC_,
      usdc_,
      usdcJoin_,
      ladle_,
      yvUSDCJoin_,
      cauldron_,
      overrides || {}
    ) as Promise<YieldLever>;
  }
  override getDeployTransaction(
    ilkId_: PromiseOrValue<BytesLike>,
    yvUSDC_: PromiseOrValue<string>,
    usdc_: PromiseOrValue<string>,
    usdcJoin_: PromiseOrValue<string>,
    ladle_: PromiseOrValue<string>,
    yvUSDCJoin_: PromiseOrValue<string>,
    cauldron_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ilkId_,
      yvUSDC_,
      usdc_,
      usdcJoin_,
      ladle_,
      yvUSDCJoin_,
      cauldron_,
      overrides || {}
    );
  }
  override attach(address: string): YieldLever {
    return super.attach(address) as YieldLever;
  }
  override connect(signer: Signer): YieldLever__factory {
    return super.connect(signer) as YieldLever__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldLeverInterface {
    return new utils.Interface(_abi) as YieldLeverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldLever {
    return new Contract(address, _abi, signerOrProvider) as YieldLever;
  }
}
