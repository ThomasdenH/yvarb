/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  YieldLever,
  YieldLeverInterface,
} from "../../YieldLever.sol/YieldLever";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "ilkId_",
        type: "bytes6",
      },
      {
        internalType: "contract yVault",
        name: "yvUSDC_",
        type: "address",
      },
      {
        internalType: "contract IToken",
        name: "iUSDC_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "usdc_",
        type: "address",
      },
      {
        internalType: "address",
        name: "usdcJoin_",
        type: "address",
      },
      {
        internalType: "contract YieldLadle",
        name: "ladle_",
        type: "address",
      },
      {
        internalType: "address",
        name: "yvUSDCJoin_",
        type: "address",
      },
      {
        internalType: "contract Cauldron",
        name: "cauldron_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        internalType: "uint128",
        name: "base",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "ink",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "art",
        type: "uint128",
      },
    ],
    name: "doClose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "investAmount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "borrowAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxFyAmount",
        type: "uint128",
      },
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
    ],
    name: "doInvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "ink",
        type: "uint128",
      },
    ],
    name: "doRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "borrowAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxFyAmount",
        type: "uint128",
      },
      {
        internalType: "bytes6",
        name: "seriesId",
        type: "bytes6",
      },
    ],
    name: "invest",
    outputs: [
      {
        internalType: "bytes12",
        name: "",
        type: "bytes12",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "ink",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "art",
        type: "uint128",
      },
      {
        internalType: "bytes6",
        name: "seriesId",
        type: "bytes6",
      },
    ],
    name: "unwind",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200176438038062001764833981016040819052620000349162000159565b6000805460d08a901c6001600160d01b03199091161766010000000000006001600160a01b038a811682029290921792839055600180546001600160a01b03199081168b8516179091556002805482168a85169081179091556003805483168a8616179055600480548316898616178155600580548416898716179055600680549093168786161790925560405163095ea7b360e01b81529290940490921691810191909152600019602482015263095ea7b3906044016020604051808303816000875af11580156200010b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000131919062000226565b50505050505050505062000251565b6001600160a01b03811681146200015657600080fd5b50565b600080600080600080600080610100898b0312156200017757600080fd5b88516001600160d01b0319811681146200019057600080fd5b60208a0151909850620001a38162000140565b60408a0151909750620001b68162000140565b60608a0151909650620001c98162000140565b60808a0151909550620001dc8162000140565b60a08a0151909450620001ef8162000140565b60c08a0151909350620002028162000140565b60e08a0151909250620002158162000140565b809150509295985092959890939650565b6000602082840312156200023957600080fd5b815180151581146200024a57600080fd5b9392505050565b61150380620002616000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806347b348451461005c57806350bf94d7146100715780636e6bf1f414610084578063d238b43314610097578063fcd064cf146100aa575b600080fd5b61006f61006a366004610eff565b6100da565b005b61006f61007f366004610f67565b61020f565b61006f610092366004610faf565b61049e565b61006f6100a5366004611036565b610730565b6100bd6100b83660046110af565b610baa565b6040516001600160a01b0319909116815260200160405180910390f35b60008054600554604051636e553f6560e01b8152600481018890526001600160a01b03918216602482015266010000000000009092041690636e553f65906044016020604051808303816000875af115801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e91906110f7565b600480546001546040516315bf1a8f60e31b81526001600160a01b03198716938101939093526001600160a01b0390811660248401526001600160801b038085166044850152808916606485015287166084840152929350919091169063adf8d4789060a4016020604051808303816000875af11580156101e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102079190611110565b505050505050565b6004546001600160a01b03166324bd54b4843061022b8561114a565b6040516001600160e01b031960e086901b1681526001600160a01b031990931660048401526001600160a01b039091166024830152600f0b60448201526001600160801b03851660648201526084016020604051808303816000875af1158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd9190611110565b50600060069054906101000a90046001600160a01b03166001600160a01b0316633ccfd60b6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033791906110f7565b5060025460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af115801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190611179565b506002546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90869083906370a0823190602401602060405180830381865afa158015610404573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042891906110f7565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190611179565b5050505050565b6004546001600160a01b031663441c70f785306104ba8661114a565b6104c38661114a565b6040516001600160e01b031960e087901b1681526001600160a01b031990941660048501526001600160a01b039092166024840152600f90810b60448401520b60648201526084016020604051808303816000875af115801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190611110565b50600060069054906101000a90046001600160a01b03166001600160a01b0316633ccfd60b6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c891906110f7565b5060025460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038616602482015291169063a9059cbb906044016020604051808303816000875af1158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a9190611179565b506002546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90879083906370a0823190602401602060405180830381865afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c191906110f7565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102079190611179565b600654604051631e81f82960e01b81526001600160a01b0319881660048201526000916001600160a01b031690631e81f82990602401606060405180830381865afa158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a79190611229565b6006546040516315740f8d60e21b81526001600160d01b0319851660048201529192506000916001600160a01b03909116906355d03e3490602401606060405180830381865afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108239190611245565b82519091506001600160a01b0316331461083c57600080fd5b60065460405163798a828b60e01b81526001600160a01b039091169063798a828b9061086e908b9030906004016112c0565b6060604051808303816000875af115801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b19190611229565b50806040015163ffffffff164263ffffffff1610156109b0576001546040513360248201526001600160a01b03198a166044820152606481018990526001600160801b03871660848201526001600160a01b039091169063c5bf0e9d9089908990309060a40160408051601f198184030181529181526020820180516001600160e01b03166350bf94d760e01b1790525160e086901b6001600160e01b0319168152610963949392919060040161133f565b6000604051808303816000875af1158015610982573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109aa9190810190611389565b50610b2a565b60065460405163550b025360e01b81526001600160d01b0319851660048201526001600160801b03861660248201526000916001600160a01b03169063550b0253906044016020604051808303816000875af1158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190611110565b6001546003546040513360248201526001600160a01b03198d1660448201526001600160801b038085166064830152808b166084830152891660a48201529293506001600160a01b039182169263c5bf0e9d9285921690309060c40160408051601f198184030181529181526020820180516001600160e01b0316631b9afc7d60e21b1790525160e086901b6001600160e01b0319168152610ae09493929190600401611436565b6000604051808303816000875af1158015610aff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b279190810190611389565b50505b60065460405163798a828b60e01b81526001600160a01b039091169063798a828b90610b5c908b9033906004016112c0565b6060604051808303816000875af1158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611229565b505050505050505050565b6006546040516315740f8d60e21b81526001600160d01b03198316600482015260009161181960f11b916001600160a01b03909116906355d03e3490602401606060405180830381865afa158015610c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2a9190611245565b602001516001600160d01b03191614610c4257600080fd5b6002546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610c99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbd9190611179565b506004805460008054604051636d4756d760e01b81526001600160d01b03198781169582019590955260d09190911b909316602484015260448301819052916001600160a01b0390911690636d4756d7906064016080604051808303816000875af1158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d54919061147f565b5090506000610d6c6001600160801b038716886114b5565b600154604051602481018390526001600160801b03808a166044830152881660648201526001600160a01b0319851660848201529192506001600160a01b03169063c5bf0e9d9088903090819060a40160408051601f198184030181529181526020820180516001600160e01b03166347b3484560e01b1790525160e086901b6001600160e01b0319168152610e089493929190600401611436565b6000604051808303816000875af1158015610e27573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e4f9190810190611389565b5060065460405163798a828b60e01b81526001600160a01b039091169063798a828b90610e8290859033906004016112c0565b6060604051808303816000875af1158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec59190611229565b50909695505050505050565b6001600160801b0381168114610ee657600080fd5b50565b6001600160a01b031981168114610ee657600080fd5b60008060008060808587031215610f1557600080fd5b843593506020850135610f2781610ed1565b92506040850135610f3781610ed1565b91506060850135610f4781610ee9565b939692955090935050565b6001600160a01b0381168114610ee657600080fd5b60008060008060808587031215610f7d57600080fd5b8435610f8881610f52565b93506020850135610f9881610ee9565b9250604085013591506060850135610f4781610ed1565b600080600080600060a08688031215610fc757600080fd5b8535610fd281610f52565b94506020860135610fe281610ee9565b93506040860135610ff281610ed1565b9250606086013561100281610ed1565b9150608086013561101281610ed1565b809150509295509295909350565b6001600160d01b031981168114610ee657600080fd5b60008060008060008060c0878903121561104f57600080fd5b863561105a81610ee9565b955060208701359450604087013561107181610f52565b9350606087013561108181610ed1565b9250608087013561109181610ed1565b915060a08701356110a181611020565b809150509295509295509295565b600080600080608085870312156110c557600080fd5b8435935060208501356110d781610ed1565b925060408501356110e781610ed1565b91506060850135610f4781611020565b60006020828403121561110957600080fd5b5051919050565b60006020828403121561112257600080fd5b815161112d81610ed1565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600081600f0b6f7fffffffffffffffffffffffffffffff19810361117057611170611134565b60000392915050565b60006020828403121561118b57600080fd5b8151801515811461112d57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000606082840312156111c357600080fd5b6040516060810181811067ffffffffffffffff821117156111e6576111e661119b565b806040525080915082516111f981610f52565b8152602083015161120981611020565b6020820152604083015161121c81611020565b6040919091015292915050565b60006060828403121561123b57600080fd5b61112d83836111b1565b60006060828403121561125757600080fd5b6040516060810181811067ffffffffffffffff8211171561127a5761127a61119b565b604052825161128881610f52565b8152602083015161129881611020565b6020820152604083015163ffffffff811681146112b457600080fd5b60408201529392505050565b6001600160a01b03199290921682526001600160a01b0316602082015260400190565b60005b838110156112fe5781810151838201526020016112e6565b8381111561130d576000848401525b50505050565b6000815180845261132b8160208601602086016112e3565b601f01601f19169290920160200192915050565b8481526001600160a01b0384811660208301528316604082015260a060608201819052600090820181905260c06080830181905261137f90830184611313565b9695505050505050565b60006020828403121561139b57600080fd5b815167ffffffffffffffff808211156113b357600080fd5b818401915084601f8301126113c757600080fd5b8151818111156113d9576113d961119b565b604051601f8201601f19908116603f011681019083821181831017156114015761140161119b565b8160405282815287602084870101111561141a57600080fd5b61142b8360208301602088016112e3565b979650505050505050565b6001600160801b03851681526001600160a01b0384811660208301528316604082015260a060608201819052600090820181905260c06080830181905261137f90830184611313565b6000806080838503121561149257600080fd5b825161149d81610ee9565b91506114ac84602085016111b1565b90509250929050565b600082198211156114c8576114c8611134565b50019056fea2646970667358221220b21d8118ba8563304a33a17ce60ca7f0d7543f99a5c30b003bd635541424e83764736f6c634300080e0033";

type YieldLeverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldLeverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldLever__factory extends ContractFactory {
  constructor(...args: YieldLeverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ilkId_: PromiseOrValue<BytesLike>,
    yvUSDC_: PromiseOrValue<string>,
    iUSDC_: PromiseOrValue<string>,
    usdc_: PromiseOrValue<string>,
    usdcJoin_: PromiseOrValue<string>,
    ladle_: PromiseOrValue<string>,
    yvUSDCJoin_: PromiseOrValue<string>,
    cauldron_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldLever> {
    return super.deploy(
      ilkId_,
      yvUSDC_,
      iUSDC_,
      usdc_,
      usdcJoin_,
      ladle_,
      yvUSDCJoin_,
      cauldron_,
      overrides || {}
    ) as Promise<YieldLever>;
  }
  override getDeployTransaction(
    ilkId_: PromiseOrValue<BytesLike>,
    yvUSDC_: PromiseOrValue<string>,
    iUSDC_: PromiseOrValue<string>,
    usdc_: PromiseOrValue<string>,
    usdcJoin_: PromiseOrValue<string>,
    ladle_: PromiseOrValue<string>,
    yvUSDCJoin_: PromiseOrValue<string>,
    cauldron_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ilkId_,
      yvUSDC_,
      iUSDC_,
      usdc_,
      usdcJoin_,
      ladle_,
      yvUSDCJoin_,
      cauldron_,
      overrides || {}
    );
  }
  override attach(address: string): YieldLever {
    return super.attach(address) as YieldLever;
  }
  override connect(signer: Signer): YieldLever__factory {
    return super.connect(signer) as YieldLever__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldLeverInterface {
    return new utils.Interface(_abi) as YieldLeverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldLever {
    return new Contract(address, _abi, signerOrProvider) as YieldLever;
  }
}
