/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SafeERC20Namer,
  SafeERC20NamerInterface,
} from "../SafeERC20Namer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6108dd61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063033b9b4f146100505780638ee573ac14610079578063e54f75221461009e575b600080fd5b61006361005e366004610626565b6100b1565b604051610070919061067f565b60405180910390f35b61008c610087366004610626565b6100e7565b60405160ff9091168152602001610070565b6100636100ac366004610626565b6101a7565b606060006100c6836395d89b4160e01b6101d0565b905080516000036100e1576100da836102fc565b9392505050565b92915050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1790529051600091829182916001600160a01b0386169161012d91906106b2565b600060405180830381855afa9150503d8060008114610168576040519150601f19603f3d011682016040523d82523d6000602084013e61016d565b606091505b5091509150818015610180575080516020145b61018b57601261019f565b8080602001905181019061019f91906106ce565b949350505050565b606060006101bc836306fdde0360e01b6101d0565b905080516000036100e1576100da83610309565b60408051600481526024810182526020810180516001600160e01b03166001600160e01b03198516179052905160609160009182916001600160a01b0387169161021a91906106b2565b600060405180830381855afa9150503d8060008114610255576040519150601f19603f3d011682016040523d82523d6000602084013e61025a565b606091505b509150915081158061026b57508051155b156102895760405180602001604052806000815250925050506100e1565b80516020036102bd576000818060200190518101906102a891906106f1565b90506102b381610316565b93505050506100e1565b6040815111156102e457808060200190518101906102db9190610720565b925050506100e1565b50506040805160208101909152600081529392505050565b60606100e1826006610472565b60606100e1826028610472565b604080516020808252818301909252606091600091906020820181803683370190505090506000805b60208110156103bd57600085826020811061035c5761035c6107cd565b1a60f81b90506001600160f81b03198116156103aa5780848481518110610385576103856107cd565b60200101906001600160f81b031916908160001a905350826103a6816107f9565b9350505b50806103b5816107f9565b91505061033f565b5060008167ffffffffffffffff8111156103d9576103d961070a565b6040519080825280601f01601f191660200182016040528015610403576020820181803683370190505b50905060005b8281101561046957838181518110610423576104236107cd565b602001015160f81c60f81b828281518110610440576104406107cd565b60200101906001600160f81b031916908160001a90535080610461816107f9565b915050610409565b50949350505050565b606061047f600283610812565b15801561048c5750600082115b8015610499575060288211155b6104e95760405162461bcd60e51b815260206004820152601e60248201527f41646472657373537472696e675574696c3a20494e56414c49445f4c454e0000604482015260640160405180910390fd5b60008267ffffffffffffffff8111156105045761050461070a565b6040519080825280601f01601f19166020018201604052801561052e576020820181803683370190505b5090506001600160a01b03841660005b848110156105ef576000610553826026610834565b61055e90600461084b565b83901c905061057360048260ff16901c6105f9565b848381518110610585576105856107cd565b60200101906001600160f81b031916908160001a9053506105a881600f166105f9565b846105b484600161086a565b815181106105c4576105c46107cd565b60200101906001600160f81b031916908160001a9053506105e8905060028261086a565b905061053e565b5090949350505050565b6000600a8260ff16101561061b57610612826030610882565b60f81b92915050565b610612826037610882565b60006020828403121561063857600080fd5b81356001600160a01b03811681146100da57600080fd5b60005b8381101561066a578181015183820152602001610652565b83811115610679576000848401525b50505050565b602081526000825180602084015261069e81604085016020870161064f565b601f01601f19169190910160400192915050565b600082516106c481846020870161064f565b9190910192915050565b6000602082840312156106e057600080fd5b815160ff811681146100da57600080fd5b60006020828403121561070357600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561073257600080fd5b815167ffffffffffffffff8082111561074a57600080fd5b818401915084601f83011261075e57600080fd5b8151818111156107705761077061070a565b604051601f8201601f19908116603f011681019083821181831017156107985761079861070a565b816040528281528760208487010111156107b157600080fd5b6107c283602083016020880161064f565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161080b5761080b6107e3565b5060010190565b60008261082f57634e487b7160e01b600052601260045260246000fd5b500690565b600082821015610846576108466107e3565b500390565b6000816000190483118215151615610865576108656107e3565b500290565b6000821982111561087d5761087d6107e3565b500190565b600060ff821660ff84168060ff0382111561089f5761089f6107e3565b01939250505056fea264697066735822122013576c9520c9b57aca278b5b81ec679cf3b910f50a396ca59d2571985965da5c64736f6c634300080e0033";

type SafeERC20NamerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeERC20NamerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeERC20Namer__factory extends ContractFactory {
  constructor(...args: SafeERC20NamerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeERC20Namer> {
    return super.deploy(overrides || {}) as Promise<SafeERC20Namer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SafeERC20Namer {
    return super.attach(address) as SafeERC20Namer;
  }
  override connect(signer: Signer): SafeERC20Namer__factory {
    return super.connect(signer) as SafeERC20Namer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeERC20NamerInterface {
    return new utils.Interface(_abi) as SafeERC20NamerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20Namer {
    return new Contract(address, _abi, signerOrProvider) as SafeERC20Namer;
  }
}
